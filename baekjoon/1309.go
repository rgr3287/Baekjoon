package main

import (
	"fmt"
)

func main() {
	var N int
	fmt.Scan(&N)

	// dp[i][0]: i번째 우리에 사자를 배치하지 않는 경우의 수
	// dp[i][1]: i번째 우리의 왼쪽에 사자를 배치하는 경우의 수
	// dp[i][2]: i번째 우리의 오른쪽에 사자를 배치하는 경우의 수
	dp := make([][3]int, N+1)

	// 초기값 설정
	dp[1][0] = 1
	dp[1][1] = 1
	dp[1][2] = 1

	for i := 2; i <= N; i++ {
		// i번째 우리에 사자를 배치하지 않는 경우의 수는 이전 우리의 모든 경우의 수와 같다.
		dp[i][0] = (dp[i-1][0] + dp[i-1][1] + dp[i-1][2]) % 9901

		// i번째 우리의 왼쪽에 사자를 배치하는 경우의 수는 이전 우리의 사자를 배치하지 않는 경우와 오른쪽에 사자를 배치하는 경우의 수와 같다.
		dp[i][1] = (dp[i-1][0] + dp[i-1][2]) % 9901

		// i번째 우리의 오른쪽에 사자를 배치하는 경우의 수도 마찬가지로 이전 우리의 사자를 배치하지 않는 경우와 왼쪽에 사자를 배치하는 경우의 수와 같다.
		dp[i][2] = (dp[i-1][0] + dp[i-1][1]) % 9901
	}

	// N번째 우리에 사자를 배치하지 않은 경우의 수, 왼쪽에 배치한 경우의 수, 오른쪽에 배치한 경우의 수를 모두 더하여 9901로 나눈 나머지를 출력
	result := (dp[N][0] + dp[N][1] + dp[N][2]) % 9901
	fmt.Println(result)
}
